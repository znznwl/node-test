def sdb():
   import requests
   from bs4 import BeautifulSoup
   from selenium import webdriver
   import chromedriver_autoinstaller
   from selenium.webdriver.common.by import By
   import time
   import openpyxl
   from openpyxl import Workbook
   import pyperclip
   import pyautogui

   driver = webdriver.Chrome()

   #엑셀 불러오기
   fpath = r'C:\Users\sdb\Desktop\project\G-market\G_Testcase.xlsx'
   wb = openpyxl.load_workbook(fpath)

   #시트 지정
   ws = wb['Test Case']

   # URL 주소
   driver.get("https://signin.gmarket.co.kr/LogIn/LogIn?URL=http://myg.gmarket.co.kr/")
   # 맥스 사이즈
   driver.maximize_window()
   time.sleep(2)

   #Log-in_01
   print('TC_01 : G마켓 타이틀 확인')
   time.sleep(1)
   url = 'https://signin.gmarket.co.kr/LogIn/LogIn?URL=http://myg.gmarket.co.kr/'
   res = requests.get(url)
   soup = BeautifulSoup(res.content, 'html.parser')
   title = soup.title.string
   time.sleep(2)
   print('title :' + title)
   if title == 'G마켓 - 로그인':
      print("TC_01 : PASS")
      ws['J3'] = 'PASS'
   else :
      print("TC_01 : Fail")
      ws['J3'] = 'FAIL'
   time.sleep(2)

   #Log-in_02
   print('TC_02 : G마켓 아이콘 확인')
   time.sleep(1)
   ty = driver.find_element(By.CSS_SELECTOR, "#desktop_layout-header > div > h1 > a")
   ty.click()
   res = requests.get('https://www.gmarket.co.kr/')
   soup = BeautifulSoup(res.content, 'html.parser')
   title = soup.title.string
   time.sleep(1)
   print('title :' + title)
   if title == 'G마켓 - 지금부터의 마켓':
      print("TC_02 : PASS")
      ws['J4'] = 'PASS'
   else :
      print("TC_02 : Fail")
      ws['J4'] = 'FAIL'
   time.sleep(2)
   driver.back()
   time.sleep(2)


   #Log-in_03
   print('TC_03 : 왼쪽 상단 검색창 확인')
   time.sleep(1)
   html = driver.page_source
   soup = BeautifulSoup(html, 'html.parser')
   search = soup.find('input', attrs={'placeholder': '통합검색'})
   search1 = search.get('placeholder')
   print('검색창 확인 :' + search1)
   if search1 == '통합검색':
      print("TC_03 : PASS")
      ws['J5'] = 'PASS'
   else :
      print("TC_03 : Fail")
      ws['J5'] = 'FAIL'
   time.sleep(2)

   #Log-in_04 (실패)
   print('TC_04 : 검색창 타이핑 확인')
   time.sleep(1)
   #test 문자 타이핑
   ty = driver.find_element(By.CSS_SELECTOR, "#form__search-keyword")
   ty.click()
   pyperclip.copy("test")
   pyautogui.hotkey("ctrl", "v")
   time.sleep(2)

   html = driver.page_source
   soup = BeautifulSoup(html, 'html.parser')
   typing = soup.find('button', attrs={'data-montelena-keyword': 'test'})
   typing1 = search.get('data-montelena-keyword')
   print('검색창 타이핑 :' )

   if typing1 == 'test':
      print("TC_04 : PASS")
      ws['J6'] = 'PASS'
   else :
      print("TC_04 : Fail")
      ws['J6'] = 'FAIL'
   time.sleep(2)

   #Log-in_05
   print('TC_05 : 검색창 돋보기 아이콘 확인')
   time.sleep(1)
   html = driver.page_source
   soup = BeautifulSoup(html, 'html.parser')
   img = soup.find('img', class_='image')
   img_src = img.get("src") # 이미지 경로
   print('이미지 경로 확인')
   if img_src == '//pics.gmarket.co.kr/pc/single/kr/common/image__header-search.png':
      print("TC_05 : PASS")
      ws['J7'] = 'Pass'
   else:
      print("TC_05 : Fail")
      ws['J7'] = 'Fail'
   time.sleep(2)

   #Log-in_06
   print('TC_06 : 카테고리 버튼 확인')
   time.sleep(1)
   ty = driver.find_element(By.CSS_SELECTOR, "#button__category-all")
   ty.click()
   html = driver.page_source
   soup = BeautifulSoup(html, 'html.parser')
   tag = soup.find("a", attrs = {"class":"link__1depth-item"}).text.strip()
   print('카테고리 버튼 확인 :' + tag)
   if tag == '브랜드패션':
      print("TC_06 : PASS")
      ws['J8'] = 'Pass'
   else:
      print("TC_06 : Fail")
      ws['J8'] = 'Fail'
   time.sleep(2)

   #Log-in_07
   print('TC_07 : 카테고리 하위항목 확인')
   time.sleep(1)
   #패션의류 · 잡화 · 뷰티
   ty = driver.find_element(By.CSS_SELECTOR, "#button__category-all")
   ty.click()
   html = driver.page_source
   soup = BeautifulSoup(html, 'html.parser')
   tag = soup.find_all("a", {"class":"link__1depth-item"})[1].text
   print('카테고리 하위항목 확인 :' + tag)
   time.sleep(2)

   #유아동
   tag = soup.find_all("a", {"class":"link__1depth-item"})[2].text
   print('카테고리 하위항목 확인 :' + tag)
   time.sleep(2)

   #식품 · 생필품
   tag = soup.find_all("a", {"class":"link__1depth-item"})[3].text
   print('카테고리 하위항목 확인 :' + tag)
   time.sleep(2)

   #홈데코 · 문구 · 취미 · 반려
   tag = soup.find_all("a", {"class":"link__1depth-item"})[4].text
   print('카테고리 하위항목 확인 :' + tag)
   time.sleep(2)

   #컴퓨터 · 디지털 · 가전
   tag = soup.find_all("a", {"class":"link__1depth-item"})[5].text
   print('카테고리 하위항목 확인 :' + tag)
   time.sleep(2)

   #스포츠 · 건강 · 렌탈
   tag = soup.find_all("a", {"class":"link__1depth-item"})[6].text
   print('카테고리 하위항목 확인 :' + tag)
   time.sleep(2)

   #자동차 · 공구
   tag = soup.find_all("a", {"class":"link__1depth-item"})[7].text
   print('카테고리 하위항목 확인 :' + tag)
   time.sleep(2)

   #여행 · 도서 · e쿠폰
   tag = soup.find_all("a", {"class":"link__1depth-item"})[8].text
   print('카테고리 하위항목 확인 :' + tag)
   if tag == '여행 · 도서 · e쿠폰':
      print("TC_07 : PASS")
      ws['J9'] = 'Pass'
   else:
      print("TC_07 : Fail")
      ws['J9'] = 'Fail'
   time.sleep(2)


   #Log-in_08
   print('TC_08 : 카테고리 하위 세부항목 확인1')
   time.sleep(1)
   #브랜드패션 > 브랜드의류 하위항목 확인
   ty = driver.find_element(By.CSS_SELECTOR, "#button__category-all")
   ty.click()
   html = driver.page_source
   soup = BeautifulSoup(html, 'html.parser')
   tag = soup.find_all("span", {"class":"text__emphasis"})[0].text
   print('카테고리 하위항목 확인 :' + tag) #대항목
   time.sleep(2)

   #브랜드여성 의류
   tag = soup.find_all("a", {"class":"link__2depth-item"})[0].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #브랜드 남성의류
   tag = soup.find_all("a", {"class":"link__2depth-item"})[1].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #브랜드 캐주얼의류
   tag = soup.find_all("a", {"class":"link__2depth-item"})[2].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)
   if tag == '브랜드 캐주얼의류':
      print("TC_08 : PASS")
      ws['J10'] = 'Pass'
   else:
      print("TC_08 : Fail")
      ws['J10'] = 'Fail'
   time.sleep(2)

   #Log-in_09
   print('TC_09 : 카테고리 하위 세부항목 확인2')
   time.sleep(1)
   #브랜드패션 > 브랜드잡화 하위항목 확인
   tag = soup.find_all("span", {"class":"text__emphasis"})[1].text
   print('카테고리 하위항목 확인 :' + tag) #대항목
   time.sleep(2)

   #브랜드 잡화
   tag = soup.find_all("a", {"class":"link__2depth-item"})[3].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #브랜드 쥬얼리/시계
   tag = soup.find_all("a", {"class":"link__2depth-item"})[4].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #수입명품
   tag = soup.find_all("a", {"class":"link__2depth-item"})[5].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)
   if tag == '수입명품':
      print("TC_09 : PASS")
      ws['J11'] = 'Pass'
   else:
      print("TC_09 : Fail")
      ws['J11'] = 'Fail'
   time.sleep(2)

   #Log-in_10
   print('TC_10 : 카테고리 하위 세부항목 확인3')
   time.sleep(1)
   #패션의류 · 잡화 · 뷰티 > 패션의류
   tag = soup.find_all("span", {"class":"text__emphasis"})[4].text
   print('카테고리 하위항목 확인 :' + tag) #대항목
   time.sleep(2)

   #여성의류
   tag = soup.find_all("a", {"class":"link__2depth-item"})[8].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #남성의류
   tag = soup.find_all("a", {"class":"link__2depth-item"})[9].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #언더웨어
   tag = soup.find_all("a", {"class":"link__2depth-item"})[10].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #유아동의류
   tag = soup.find_all("a", {"class":"link__2depth-item"})[11].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)
   if tag == '유아동의류':
      print("TC_10 : PASS")
      ws['J12'] = 'Pass'
   else:
      print("TC_10 : Fail")
      ws['J12'] = 'Fail'
   time.sleep(2)

   #Log-in_11
   print('TC_11 : 카테고리 하위 세부항목 확인4')
   time.sleep(1)
   #패션의류 · 잡화 · 뷰티 > 잡화
   tag = soup.find_all("span", {"class":"text__emphasis"})[5].text
   print('카테고리 하위항목 확인 :' + tag) #대항목
   time.sleep(2)

   #신발
   tag = soup.find_all("a", {"class":"link__2depth-item"})[12].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #가방/잡화
   tag = soup.find_all("a", {"class":"link__2depth-item"})[13].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #유아동 신발/잡화
   tag = soup.find_all("a", {"class":"link__2depth-item"})[14].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #쥬얼리/시계
   tag = soup.find_all("a", {"class":"link__2depth-item"})[15].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)

   #수입명품
   tag = soup.find_all("a", {"class":"link__2depth-item"})[16].text
   print('카테고리 하위항목 확인 :' + tag) #소항목
   time.sleep(2)
   if tag == '수입명품':
      print("TC_11 : PASS")
      ws['J13'] = 'Pass'
   else:
      print("TC_11 : Fail")
      ws['J13'] = 'Fail'
   time.sleep(2)

   #Log-in_12
   print('TC_12 : 서비스 버튼 확인')
   time.sleep(1)
   ty = driver.find_element(By.CSS_SELECTOR, "#button__service-all")
   ty.click()
   html = driver.page_source
   soup = BeautifulSoup(html, 'html.parser')
   tag = soup.find_all("button", {"class":"button__simple-category button__simple-category-service sprite__common--after"})[0].text
   print('서비스 버튼 확인 :' + tag) #대항목
   time.sleep(2)
   if tag == '서비스':
      print("TC_12 : PASS")
      ws['J14'] = 'Pass'
   else:
      print("TC_12 : Fail")
      ws['J14'] = 'Fail'
   time.sleep(2)

   #Log-in_13
   print('TC_13 : 서비스 버튼 하위항목 확인')
   time.sleep(1)
   tag = soup.find_all("a", {"class":"link__simple-service"})[0].text
   print('서비스 하위항목 확인 :' + tag) #대항목
   time.sleep(2)
   if tag == '유니버스 클럽':
      print("TC_13 : PASS")
      ws['J15'] = 'Pass'
   else:
      print("TC_13 : Fail")
      ws['J15'] = 'Fail'
   time.sleep(2)

   #Log-in_14
   print('TC_14 : 서비스 버튼 하위항목 확인')
   time.sleep(1)
   tag = soup.find_all("a", {"class":"link__simple-service"})[1].text
   print('서비스 하위항목 확인 :' + tag) #대항목
   time.sleep(2)
   if tag == '스마일프레시':
      print("TC_14 : PASS")
      ws['J16'] = 'Pass'
   else:
      print("TC_14 : Fail")
      ws['J16'] = 'Fail'
   time.sleep(2)

   #Log-in_15
   print('TC_15 : 서비스 버튼 하위항목 확인')
   time.sleep(1)
   tag = soup.find_all("a", {"class":"link__simple-service"})[2].text
   print('서비스 하위항목 확인 :' + tag) #대항목
   time.sleep(2)
   if tag == '스마일배송':
      print("TC_15 : PASS")
      ws['J17'] = 'Pass'
   else:
      print("TC_15 : Fail")
      ws['J17'] = 'Fail'
   time.sleep(2)

   '''
   items = soup.select(".link__1depth-item")
   for e, item in enumerate(items, 1):
      print(f"{e} : {item.text}")
   '''

   #엑셀 저장
   wb.save(r'C:\Users\sdb\Desktop\project\G-market\G_Testcase.xlsx')
   wb.close
   '''
   #Log-in_06
   ty = driver.find_element(By.CSS_SELECTOR, "#button__category-all")
   ty.click()
   res = requests.get(url)
   soup = BeautifulSoup(res.content, 'html.parser')

   items = soup.select(".link__1depth-item")
   for item in items:
      print(item.text)'''
